<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.family.bookkeeping.dao.UserDao">

  <resultMap type="com.family.bookkeeping.entity.User" id="UserMap">
    <result property="id" column="id" jdbcType="INTEGER"/>
    <result property="name" column="name" jdbcType="VARCHAR"/>
    <result property="loginName" column="login_name" jdbcType="VARCHAR"/>
    <result property="loginPassword" column="login_password" jdbcType="VARCHAR"/>
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    <result property="createBy" column="create_by" jdbcType="INTEGER"/>
    <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
    <result property="deleted" column="deleted" jdbcType="BOOLEAN"/>
  </resultMap>

  <!--查询单个-->
  <select id="queryById" resultMap="UserMap">
    select id,
           name,
           login_name,
           login_password,
           create_time,
           create_by,
           update_time,
           update_by,
           deleted
    from book_keeping.user
    where id = #{id}
  </select>

  <!--查询指定行数据-->
  <select id="queryAllByLimit" resultMap="UserMap">
    select id,
           name,
           login_name,
           login_password,
           create_time,
           create_by,
           update_time,
           update_by,
           deleted
    from book_keeping.user limit #{offset}, #{limit}
  </select>

  <!--通过实体作为筛选条件查询-->
  <select id="queryAll" resultMap="UserMap">
    select
    id, name, login_name, login_password, create_time, create_by, update_time, update_by, deleted
    from book_keeping.user
    <where>
      <if test="id != null">
        and id = #{id}
      </if>
      <if test="name != null and name != ''">
        and name = #{name}
      </if>
      <if test="loginName != null and loginName != ''">
        and login_name = #{loginName}
      </if>
      <if test="loginPassword != null and loginPassword != ''">
        and login_password = #{loginPassword}
      </if>
      <if test="createTime != null">
        and create_time = #{createTime}
      </if>
      <if test="createBy != null">
        and create_by = #{createBy}
      </if>
      <if test="updateTime != null">
        and update_time = #{updateTime}
      </if>
      <if test="updateBy != null">
        and update_by = #{updateBy}
      </if>
      <if test="deleted != null">
        and deleted = #{deleted}
      </if>
    </where>
  </select>

  <!--新增所有列-->
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into book_keeping.user(name, login_name, login_password, create_time, create_by,
                                  update_time, update_by, deleted)
    values (#{name}, #{loginName}, #{loginPassword}, #{createTime}, #{createBy}, #{updateTime},
            #{updateBy}, #{deleted})
  </insert>

  <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
    insert into book_keeping.user(name, login_name, login_password, create_time, create_by,
    update_time, update_by, deleted)
    values
    <foreach collection="entities" item="entity" separator=",">
      (#{entity.name}, #{entity.loginName}, #{entity.loginPassword}, #{entity.createTime},
      #{entity.createBy}, #{entity.updateTime}, #{entity.updateBy}, #{entity.deleted})
    </foreach>
  </insert>

  <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
    insert into book_keeping.user(name, login_name, login_password, create_time, create_by,
    update_time, update_by, deleted)
    values
    <foreach collection="entities" item="entity" separator=",">
      (#{entity.name}, #{entity.loginName}, #{entity.loginPassword}, #{entity.createTime},
      #{entity.createBy}, #{entity.updateTime}, #{entity.updateBy}, #{entity.deleted})
    </foreach>
    on duplicate key update
    name = values(name) , login_name = values(login_name) , login_password = values(login_password)
    , create_time = values(create_time) , create_by = values(create_by) , update_time =
    values(update_time) , update_by = values(update_by) , deleted = values(deleted)
  </insert>

  <!--通过主键修改数据-->
  <update id="update">
    update book_keeping.user
    <set>
      <if test="name != null and name != ''">
        name = #{name},
      </if>
      <if test="loginName != null and loginName != ''">
        login_name = #{loginName},
      </if>
      <if test="loginPassword != null and loginPassword != ''">
        login_password = #{loginPassword},
      </if>
      <if test="createTime != null">
        create_time = #{createTime},
      </if>
      <if test="createBy != null">
        create_by = #{createBy},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy},
      </if>
      <if test="deleted != null">
        deleted = #{deleted},
      </if>
    </set>
    where id = #{id}
  </update>

  <!--通过主键删除-->
  <delete id="deleteById">
    delete
    from book_keeping.user
    where id = #{id}
  </delete>

</mapper>

